// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using YammerScraper;
//
//    var thread = Thread.FromJson(jsonString);

namespace YammerScraper
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Thread
    {
        [JsonProperty("url")]
        public Uri Url { get; set; }

        [JsonProperty("web_url")]
        public Uri WebUrl { get; set; }

        [JsonProperty("type")]
        public string Type { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }

        [JsonProperty("network_id")]
        public long NetworkId { get; set; }

        [JsonProperty("thread_starter_id")]
        public long ThreadStarterId { get; set; }

        [JsonProperty("group_id")]
        public long? GroupId { get; set; }

        [JsonProperty("topics")]
        public object[] Topics { get; set; }

        [JsonProperty("privacy")]
        public string Privacy { get; set; }

        [JsonProperty("announcement")]
        public bool Announcement { get; set; }

        [JsonProperty("direct_message")]
        public bool DirectMessage { get; set; }

        [JsonProperty("has_attachments")]
        public bool HasAttachments { get; set; }

        [JsonProperty("reply_disabled")]
        public bool ReplyDisabled { get; set; }

        [JsonProperty("stats")]
        public StatsClass Stats { get; set; }

        [JsonProperty("invited_user_ids")]
        public object[] InvitedUserIds { get; set; }

        [JsonProperty("read_only")]
        public bool ReadOnly { get; set; }

        public partial class StatsClass
        {
            [JsonProperty("first_reply_id")]
            public long? FirstReplyId { get; set; }

            [JsonProperty("first_reply_at")]
            public string FirstReplyAt { get; set; }

            [JsonProperty("latest_reply_id")]
            public long LatestReplyId { get; set; }

            [JsonProperty("latest_reply_at")]
            public string LatestReplyAt { get; set; }

            [JsonProperty("updates")]
            public long Updates { get; set; }

            [JsonProperty("shares")]
            public long Shares { get; set; }
        }
    }

    public partial class Thread
    {
        public static Thread FromJson(string json) => JsonConvert.DeserializeObject<Thread>(json, YammerScraper.Converter.Settings);
    }

}
